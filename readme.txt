#Dicerino: Jogo de Dados em C

## üé≤ Sobre o Projeto
Dicerino √© um jogo de dados desenvolvido em linguagem C, inspirado em cl√°ssicos como Yahtzee. Ele mistura elementos de sorte e estrat√©gia, combinando as combina√ß√µes de m√£os do p√¥quer com o preenchimento de uma cartela de pontua√ß√£o, similar ao bingo.

Este projeto foi desenvolvido como trabalho final da disciplina de Programa√ß√£o de Computadores 2, com o objetivo de aplicar de forma pr√°tica os principais conceitos de programa√ß√£o em C aprendidos em sala de aula, como estruturas de dados, aloca√ß√£o din√¢mica e manipula√ß√£o de arquivos.

‚ú® Funcionalidades
Menu Interativo: Navegue facilmente entre Iniciar um Novo Jogo, ver o Hist√≥rico de Partidas ou consultar o Ranking.

Jogabilidade Cl√°ssica: Voc√™ tem 3 rolagens por rodada para tentar formar a melhor combina√ß√£o de 5 dados.

Segurar Dados: A cada rolagem, escolha quais dados manter ("segurar") para otimizar sua pontua√ß√£o.

Dura√ß√£o Vari√°vel: Escolha jogar de 1 a 12 rodadas.

Sistema de Pontua√ß√£o: 11 combina√ß√µes diferentes para preencher, cada uma com sua pr√≥pria regra de pontua√ß√£o.

Hist√≥rico Persistente: Todas as partidas s√£o salvas automaticamente em um arquivo historicoDICE.txt.

Ranking de Jogadores: O jogo calcula e exibe um ranking baseado na maior pontua√ß√£o (recorde) obtida em partidas de 6 rodadas (dura√ß√£o padr√£o).

üí° Conceitos Aplicados
Este projeto foi uma oportunidade para implementar e consolidar diversos conceitos fundamentais da linguagem C:

Estruturas de Dados (struct): Utilizadas para modelar a CARTELA (cartela de pontua√ß√£o), o PERFIL do jogador e os COMBOS de pontua√ß√£o.

Listas Encadeadas: A cartela de cada jogador √© implementada como uma lista encadeada, permitindo flexibilidade e gerenciamento din√¢mico.

Aloca√ß√£o Din√¢mica de Mem√≥ria: Uso de malloc() e free() para gerenciar a mem√≥ria das listas encadeadas e de vetores auxiliares.

Manipula√ß√£o de Ponteiros: Conceito central para a implementa√ß√£o e navega√ß√£o das listas encadeadas.

Leitura e Escrita de Arquivos (File I/O): Fun√ß√µes como fopen(), fprintf(), fgets() e sscanf() s√£o usadas para criar, ler e atualizar o arquivo historicoDICE.txt, garantindo a persist√™ncia dos dados.

Modulariza√ß√£o com Fun√ß√µes: O c√≥digo √© organizado em diversas fun√ß√µes, cada uma com uma responsabilidade √∫nica (ex: jogarDados, calcularPontos, ranquear_jogadores).


